name: main-branch

on:
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: access to secrets
        run: |
          echo "REACT_APP_API_KEY=$REACT_APP_API_KEY" >> .env
          echo "REACT_APP_APP_ID=$REACT_APP_APP_ID" >> .env
          echo "REACT_APP_AUTH_DOMAIN=$REACT_APP_AUTH_DOMAIN" >> .env
          echo "REACT_APP_MESSAGING_SENDER_ID=$REACT_APP_MESSAGING_SENDER_ID" >> .env
          echo "REACT_APP_PROJECT_ID=$REACT_APP_PROJECT_ID" >> .env
          echo "REACT_APP_STORAGE_BUCKET=$REACT_APP_STORAGE_BUCKET" >> .env
        env:
          REACT_APP_API_KEY: ${{secrets.REACT_APP_API_KEY}}
          REACT_APP_APP_ID: ${{secrets.REACT_APP_APP_ID}}
          REACT_APP_AUTH_DOMAIN: ${{secrets.REACT_APP_AUTH_DOMAIN}}
          REACT_APP_MESSAGING_SENDER_ID: ${{secrets.REACT_APP_MESSAGING_SENDER_ID}}
          REACT_APP_PROJECT_ID: ${{secrets.REACT_APP_PROJECT_ID}}
          REACT_APP_STORAGE_BUCKET: ${{secrets.REACT_APP_STORAGE_BUCKET}}
                
      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1 
        with: 
          aws-access-key-id: ${{ secrets.AWS_IAM_MANAGER_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_IAM_MANAGER_SECRET_ACCESS_KEY }} 
          aws-region: ap-northeast-1

      - name: Upload /build to S3
        env:
          BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME}}
        run: |
          aws s3 cp --recursive --region ap-northeast-2 build s3://$BUCKET_NAME
